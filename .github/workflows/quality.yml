name: Quality
on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'next'
jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: ./.github/actions/install
  commitlint:
    name: Lint commits
    runs-on: ubuntu-latest
    needs: install
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Bootstrap
        uses: ./.github/actions/bootstrap
      - name: Lint commits
        run: yarn commitlint --from "origin/${GITHUB_BASE_REF}"
  build:
    name: Build packages
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Bootstrap
        uses: ./.github/actions/bootstrap
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            node_modules/.cache/nx
            packages/*/lib
            packages/core/schemas
          key: cache-build-${{ github.sha }}
      - name: Build packages
        run: yarn build
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Bootstrap
        uses: ./.github/actions/bootstrap
      - name: Lint code
        run: yarn lint
  test:
    name: Test code
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Bootstrap
        uses: ./.github/actions/bootstrap
      - name: Test code
        run: yarn test
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/cli/coverage/lcov.info,./packages/core/coverage/lcov.info,./packages/toolkit/coverage/lcov.info,core
          fail_ci_if_error: true
